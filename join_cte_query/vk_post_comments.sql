/*Вам доступна база данных, принадлежащая социальной сети "ВКонтакте". Она включает таблицу Submissions, которая хранит информацию о постах и комментариях, опубликованных в сети.

Таблица Submissions
+--------+-----------+
| sub_id | parent_id |
+--------+-----------+
| 6      | NULL      |
| 9      | NULL      |
| 15     | 9         |
| 14     | 9         |
| 2      | 8         |
| 8      | NULL      |
| 7      | 1         |
| 3      | 1         |
| 11     | 1         |
| 1      | NULL      |
| 10     | 9         |
| 12     | 6         |
| 13     | NULL      |
| 4      | 6         |
+--------+-----------+
Первое поле этой таблицы содержит идентификатор поста или комментария. Направленность второго поля определяется первым полем: если первое поле содержит идентификатор поста, то второе поле содержит значение NULL, если же первое поле содержит идентификатор комментария, то второе поле содержит идентификатор поста, к которому был оставлен комментарий.
Напишите запрос, который извлекает из предложенной базы данных идентификаторы постов, а также определяет количество комментариев, оставленных под каждым постом.

Поле с идентификатором поста должно иметь псевдоним post_id, поле с количеством оставленных под постом комментариев — number_of_comments.

Записи в результирующей таблице должны быть расположены в порядке убывания значения поля post_id.

Результат запроса
+---------+--------------------+
| post_id | number_of_comments |
+---------+--------------------+
| 13      | 0                  |
| 9       | 3                  |
| 8       | 1                  |
| 6       | 2                  |
| 1       | 3                  |
+---------+--------------------+
Скрипт для создания таблицы Submissions
DROP TABLE IF EXISTS Submissions;
CREATE TABLE Submissions
(
    sub_id    INT,
    parent_id INT
);

TRUNCATE Submissions;
INSERT INTO Submissions (sub_id, parent_id)
VALUES (6, NULL),
       (9, NULL),
       (15, 9),
       (14, 9),
       (2, 8),
       (8, NULL),
       (7, 1),
       (3, 1),
       (11, 1),
       (1, NULL),
       (10, 9),
       (12, 6),
       (13, NULL),
       (4, 6);
Тестовые данные*/
SELECT t1.sub_id AS post_id, COUNT(t2.parent_id) AS number_of_comments 
FROM (SELECT sub_id FROM Submissions WHERE parent_id IS NULL) AS t1
LEFT JOIN 
(SELECT parent_id FROM Submissions WHERE parent_id IS NOT NULL) AS t2
ON t1.sub_id = t2.parent_id
GROUP BY t1.sub_id
ORDER BY post_id DESC;
